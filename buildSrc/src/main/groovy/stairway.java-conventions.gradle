// Java conventions common for all of the code
plugins {
    id 'idea'
    id 'java'
    id 'java-library'
    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    // For SpotBugs annotations (still using FindBugs annotations)
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.7.2'

    // For logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'

    // For testing
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.1'
    testRuntimeOnly group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.13'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

// Linter - Spotless configuration
spotless {
    java {
        googleJavaFormat()
        removeUnusedImports()
        targetExclude "${buildDir}/**"
    }
}
build.dependsOn spotlessApply

// Static Analysis - Spotbugs configuration
spotbugs {
    toolVersion = '4.7.0'
    effort = 'max'
    extraArgs = [ '-emacs'] // formats 'html' reports as plain text & viewable in IntelliJ
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}

test {
    useJUnitPlatform {
        includeTags 'unit'
    }
}
