buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.jfrog.artifactory', name: 'com.jfrog.artifactory.gradle.plugin', version: '4.13.0', ext: 'pom'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.github.spotbugs' version '4.0.8'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id "org.springframework.boot" version "2.4.0"
}

version = gradle.version
sourceCompatibility = JavaVersion.VERSION_11
mainClassName = 'bio.terra.stairctl.Application'

repositories {
    mavenCentral()
//    maven {
//        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release-local/'
//    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    // alphabetical
    ext {
        commonsLang3 = "3.9"
        findbugsAnnotations = "3.0.1"
        hamcrest = "2.2"
        jackson = "2.10.2"
        junit = "5.7.1"
        logback = "1.2.3"
        sl4j = "1.7.30"
        springboot = "2.4.5"
        springshell = "2.0.1.RELEASE"
        stairway = "0.0.47-SNAPSHOT"

    }

    // This allows you to build with a local Stairway JAR file, instead of the one from the repository
    // For example, ./gradlew -Pstairwayjar=/Users/dd/code/stairway/build/libs/stairway-0.0.4-SNAPSHOT.jar
    // Or define the environment variable ORG_GRADLE_PROJECT_stairwayjar
    if (project.hasProperty("stairwayjar")) {
        implementation files(project.ext.get("stairwayjar"))
        implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
        implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'
    } else {
        implementation group: "bio.terra", name: "stairway", version: "${stairway}"
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: "${springboot}"
    implementation group: 'org.springframework.shell', name: 'spring-shell-starter', version: "${springshell}"

    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.9.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logback}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${sl4j}"

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jackson}"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jackson}"

    // Findbugs annotations, so we can selectively suppress findbugs findings
    implementation group: 'com.google.code.findbugs', name: 'annotations', version: "${findbugsAnnotations}"

    runtimeOnly group: "org.postgresql", name: "postgresql", version: "42.2.18"
    runtimeOnly group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.7'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junit}"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: "${hamcrest}"
    //testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

}

spotless {
    java {
        googleJavaFormat()
    }
}

spotbugs {
    effort = 'max'
    // This makes the "html" reports come out in plain text so you can just open the file in IntelliJ
    // and look at your bugs instead of having to switch to a browser.
    extraArgs = [ '-emacs']
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}

compileJava.dependsOn tasks.spotlessApply
