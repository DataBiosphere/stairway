buildscript {
    // This is all for the artifactory plugin
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.jfrog.artifactory', name: 'com.jfrog.artifactory.gradle.plugin', version: '4.13.0', ext: 'pom'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.13.0'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'com.github.spotbugs' version '4.0.8'
}

group 'bio.terra'
version '0.0.8-SNAPSHOT'
sourceCompatibility = 1.8

// TODO: there may be a better way to supply these values than envvars.
// This and the test below makes sure the build will fail reasonably if you try
// to publish with the
def artifactory_user = System.getenv('ARTIFACTORY_USER')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_user == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USER and ARTIFACTORY_PASSWORD to publish")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // Database migration
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '3.8.6'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.25'

    // JSON processing
    implementation('com.fasterxml.jackson.core:jackson-databind') { version { prefer '2.11.0.rc1' } }
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310') { version { prefer '2.11.0.rc1' } }
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jdk8') { version { prefer '2.11.0.rc1' } }
    implementation('com.fasterxml.jackson.module:jackson-module-parameter-names') { version { prefer '2.11.0.rc1' } }
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'

    // For HttpStatus:
    implementation group: 'org.springframework', name: 'spring-web', version: '5.2.2.RELEASE'

    // For PubSub
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.105.0'

    // For SpotBugs annotations (still FindBugs annotations)
    implementation 'com.google.code.findbugs:annotations:3.0.1'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    // For log control during unit testsing
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testRuntime group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.7'
}

test {
    useJUnitPlatform {
        includeTags 'unit'
    }
}

task testConnected(type: Test) {
    useJUnitPlatform {
        includeTags 'connected'
    }
}

java {
    withJavadocJar()
}

publishing {
    publications {
        stairwayLibrary(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('stairwayLibrary')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            // properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

spotless {
    java {
        googleJavaFormat()
    }
}

spotbugs {
    effort = 'max'
    // This makes the "html" reports come out in plain text so you can just open the file in IntelliJ
    // and look at your bugs instead of having to switch to a browser.
    extraArgs = [ '-emacs']
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}

compileJava.dependsOn tasks.spotlessApply

